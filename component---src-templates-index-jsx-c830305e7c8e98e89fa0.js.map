{"version":3,"sources":["webpack:///./src/templates/Page/index.jsx","webpack:///./src/templates/index.jsx","webpack:///./src/components/Adsense/index.jsx","webpack:///./src/templates/Post/index.jsx"],"names":["Page","_ref","data","react_default","a","createElement","dangerouslySetInnerHTML","__html","post","html","propTypes","PropTypes","shape","string","isRequired","Template","location","Layout","Meta","title","get","site","Post","options","isIndex","adsense","templates_Page","props","pageQuery","Adsense","componentDidMount","this","clientId","window","adsbygoogle","push","render","_this$props","slotId","format","className","style","display","data-ad-client","data-ad-slot","data-ad-format","React","Component","defaultProps","Button","path","label","primary","gatsby_browser_entry","to","bool","Badges","_ref2","items","map","item","i","key","_ref3","_data$frontmatter","frontmatter","category","tags","description","date","image","isMore","match","fixed","boxShadow","dateTime","gatsby_image_default","margin","body","replace","split","getDescription","components_Adsense","getAd","categoly","arrayOf","childImageSharp","any"],"mappings":"kLAOMA,UAAO,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACXC,EAAAC,EAAAC,cAAA,OAAKC,wBAAyB,CAAEC,OAAQL,EAAKM,KAAKC,UAGpDT,EAAKU,UAAY,CACfR,KAAMS,IAAUC,MAAM,CACpBJ,KAAM,CACJC,KAAME,IAAUE,OAAOC,cAExBA,YAGUd,gDCcAe,UArBE,SAAAd,GAAA,IAAGC,EAAHD,EAAGC,KAAMc,EAATf,EAASe,SAAT,OACfb,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAQD,SAAUA,GAChBb,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEC,MAAOC,IAAIlB,EAAM,0BACjBmB,KAAMD,IAAIlB,EAAM,eAEwB,SAAzCkB,IAAIlB,EAAM,2BACTC,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEpB,KAAMkB,IAAIlB,EAAM,QAChBqB,QAAS,CACPC,SAAS,EACTC,QAASL,IAAIlB,EAAM,wBAIvBC,EAAAC,EAAAC,cAACqB,WAAcC,cAOVC,EAAS,yMChChBC,oGACJC,6BACuBC,KAAKJ,MAAlBK,WAELC,OAAOC,YAAcD,OAAOC,aAAe,IAAIC,KAAK,OAIzDC,kBAAS,IAAAC,EAC8BN,KAAKJ,MAAlCK,EADDK,EACCL,SAAUM,EADXD,EACWC,OAAQC,EADnBF,EACmBE,OAE1B,OAAOP,EACL7B,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,MACbrC,EAAAC,EAAAC,cAAA,OACEmC,UAAU,cACVC,MAAO,CAAEC,QAAS,SAClBC,iBAAgBX,EAChBY,eAAcN,EACdO,iBAAgBN,KAIpB,OAtBgBO,IAAMC,WA2B5BlB,EAAQmB,aAAe,CACrBhB,SAAU,GACVM,OAAQ,IAGVT,EAAQnB,UAAY,CAClBsB,SAAUrB,IAAUE,OACpByB,OAAQ3B,IAAUE,OAClB0B,OAAQ5B,IAAUE,OAAOC,YAGZe,QCbToB,UAAS,SAAAhD,GAAA,IAAGiD,EAAHjD,EAAGiD,KAAMC,EAATlD,EAASkD,MAAOC,EAAhBnD,EAAgBmD,QAAhB,OACbjD,EAAAC,EAAAC,cAACgD,EAAA,KAAD,CAAMb,UAAU,WAAWc,GAAIJ,GAC7B/C,EAAAC,EAAAC,cAAA,QACEmC,UAAS,sCACPY,EAAU,sBAAwB,0BAGnCD,MAKPF,EAAOvC,UAAY,CACjBwC,KAAMvC,IAAUE,OAAOC,WACvBqC,MAAOxC,IAAUE,OAAOC,WACxBsC,QAASzC,IAAU4C,KAAKzC,YAG1B,IAAM0C,EAAS,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAON,EAAVK,EAAUL,QAAV,OACbO,IAAID,EAAO,SAACE,EAAMC,GAAP,OACT1D,EAAAC,EAAAC,cAAA,QACEmC,UAAS,UAAWY,EAAU,gBAAkB,mBAChDU,IAAKD,GAEJD,MAIDtC,EAAO,SAAAyC,GAAuB,IAApB7D,EAAoB6D,EAApB7D,KAAMqB,EAAcwC,EAAdxC,QAAcyC,EAS9B9D,EAAK+D,YAPPC,EAFgCF,EAEhCE,SACAC,EAHgCH,EAGhCG,KACAC,EAJgCJ,EAIhCI,YACAjD,EALgC6C,EAKhC7C,MACA+B,EANgCc,EAMhCd,KACAmB,EAPgCL,EAOhCK,KACAC,EARgCN,EAQhCM,MAEM9C,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QACXhB,EAAOW,IAAIlB,EAAM,QACjBqE,EAAS/C,KAAaf,EAAK+D,MAAM,qBACjCC,EAAQrD,IAAIkD,EAAO,yBAEzB,OACEnE,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,UAAUsB,IAAKZ,GAC5B/C,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,aACbrC,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,QACbrC,EAAAC,EAAAC,cAACgD,EAAA,KAAD,CAAMZ,MAAO,CAAEiC,UAAW,QAAUpB,GAAIJ,GACtC/C,EAAAC,EAAAC,cAAA,UAAKc,GACLhB,EAAAC,EAAAC,cAAA,QAAMsE,SAAUN,GAAOA,IAExBb,EAAO,CAAEE,MAAO,CAACQ,GAAWd,SAAS,IACrCI,EAAO,CAAEE,MAAOS,KAEnBhE,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,WACbrC,EAAAC,EAAAC,cAAA,SAAI+D,GACHK,EACCtE,EAAAC,EAAAC,cAACuE,EAAAxE,EAAD,CAAKqE,MAAOA,EAAOhC,MAAO,CAAEC,QAAS,QAASmC,OAAQ,YAEtD,IAGJ1E,EAAAC,EAAAC,cAAA,OACEmC,UAAU,UACVlC,wBAAyB,CACvBC,OAAQgE,EA5EG,SAAA9D,GACrB,IAAIqE,EAAOrE,EAAKsE,QAAQ,gBAAiB,mCACzC,OAAID,EAAKN,MAAM,2BAEU,KADvBM,EAAOA,EAAKE,MAAM,sBACF,GACPF,EAAK,GAGTA,EAoEoBG,CAAexE,GAAQA,KAG3C8D,EAAStB,EAAO,CAAEC,OAAMC,MAAO,OAAQC,SAAS,IAAU,GAlFrD,SAAC5B,EAASC,GAAV,OACXD,EAAmE,GAAzDrB,EAAAC,EAAAC,cAAC6E,EAAD,CAASlD,SAAUP,EAASa,OAAO,GAAGC,OAAO,SAkFjD4C,CAAM3D,EAASC,MAMxBH,EAAKZ,UAAY,CACfR,KAAMS,IAAUC,MAAM,CACpBqD,YAAa,CACXmB,SAAUzE,IAAUE,OAAOC,WAC3BqD,KAAMxD,IAAU0E,QAAQ1E,IAAUE,QAAQC,WAC1CsD,YAAazD,IAAUE,OAAOC,WAC9BK,MAAOR,IAAUE,OAAOC,WACxBoC,KAAMvC,IAAUE,OAAOC,WACvBwD,MAAO,CACLgB,gBAAiB,CACfb,MAAO9D,IAAU4E,IAAIzE,cAI3BL,KAAME,IAAUE,OAAOC,aACtBA,WACHS,QAASZ,IAAUC,MAAM,CACvBY,QAASb,IAAU4C,KAAKzC,WACxBW,QAASd,IAAUE,OAAOC,aACzBA,YAGUQ","file":"component---src-templates-index-jsx-c830305e7c8e98e89fa0.js","sourcesContent":["/* eslint react/no-danger: 0 */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./style.scss\";\n\nconst Page = ({ data }) => (\n  <div dangerouslySetInnerHTML={{ __html: data.post.html }} />\n);\n\nPage.propTypes = {\n  data: PropTypes.shape({\n    post: {\n      html: PropTypes.string.isRequired,\n    },\n  }).isRequired,\n};\n\nexport default Page;\n","/* eslint react/no-this-in-sfc: 0 */\n\nimport { graphql } from \"gatsby\";\nimport get from \"lodash/get\";\nimport React from \"react\";\n\nimport Meta from \"components/Meta\";\nimport Layout from \"components/Layout\";\n\nimport Post from \"templates/Post\";\nimport Page from \"templates/Page\";\n\nconst Template = ({ data, location }) => (\n  <div>\n    <Layout location={location}>\n      <Meta\n        title={get(data, \"post.frontmatter.title\")}\n        site={get(data, \"site.meta\")}\n      />\n      {get(data, \"post.frontmatter.layout\") !== \"page\" ? (\n        <Post\n          data={get(data, \"post\")}\n          options={{\n            isIndex: false,\n            adsense: get(data, \"site.meta.adsense\"),\n          }}\n        />\n      ) : (\n        <Page {...this.props} />\n      )}\n    </Layout>\n  </div>\n);\nexport default Template;\n\nexport const pageQuery = graphql`\n  query PostByPath($path: String!) {\n    site {\n      meta: siteMetadata {\n        title\n        description\n        url: siteUrl\n        author\n        twitter\n        adsense\n      }\n    }\n    post: markdownRemark(frontmatter: { path: { eq: $path } }) {\n      id\n      html\n      frontmatter {\n        layout\n        title\n        path\n        category\n        tags\n        description\n        date(formatString: \"YYYY/MM/DD\")\n        image {\n          childImageSharp {\n            fixed(width: 500) {\n              ...GatsbyImageSharpFixed_withWebp\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Adsense extends React.Component {\n  componentDidMount() {\n    const { clientId } = this.props;\n    if (clientId) {\n      (window.adsbygoogle = window.adsbygoogle || []).push({});\n    }\n  }\n\n  render() {\n    const { clientId, slotId, format } = this.props;\n\n    return clientId ? (\n      <div className=\"ad\">\n        <ins\n          className=\"adsbygoogle\"\n          style={{ display: \"block\" }}\n          data-ad-client={clientId}\n          data-ad-slot={slotId}\n          data-ad-format={format}\n        />\n      </div>\n    ) : (\n      \"\"\n    );\n  }\n}\n\nAdsense.defaultProps = {\n  clientId: \"\",\n  slotId: \"\",\n};\n\nAdsense.propTypes = {\n  clientId: PropTypes.string,\n  slotId: PropTypes.string,\n  format: PropTypes.string.isRequired,\n};\n\nexport default Adsense;\n","/* eslint react/no-danger: 0 */\n\nimport { Link } from \"gatsby\";\nimport get from \"lodash/get\";\nimport React from \"react\";\nimport map from \"lodash/map\";\nimport Img from \"gatsby-image\";\nimport PropTypes from \"prop-types\";\n\nimport Adsense from \"components/Adsense\";\n// import Footer from 'components/Footer'\n\nimport \"./style.scss\";\n\nconst getAd = (isIndex, adsense) =>\n  !isIndex ? <Adsense clientId={adsense} slotId=\"\" format=\"auto\" /> : \"\";\n\nconst getDescription = html => {\n  let body = html.replace(/<blockquote>/g, '<blockquote class=\"blockquote\">');\n  if (body.match(\"<!--more-->\")) {\n    body = body.split(\"<!--more-->\");\n    if (typeof body[0] !== \"undefined\") {\n      return body[0];\n    }\n  }\n  return body;\n};\n\nconst Button = ({ path, label, primary }) => (\n  <Link className=\"readmore\" to={path}>\n    <span\n      className={`btn btn-outline-primary btn-block ${\n        primary ? \"btn-outline-primary\" : \"btn-outline-secondary\"\n      }`}\n    >\n      {label}\n    </span>\n  </Link>\n);\n\nButton.propTypes = {\n  path: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  primary: PropTypes.bool.isRequired,\n};\n\nconst Badges = ({ items, primary }) =>\n  map(items, (item, i) => (\n    <span\n      className={`badge ${primary ? \"badge-primary\" : \"badge-secondary\"}`}\n      key={i}\n    >\n      {item}\n    </span>\n  ));\n\nconst Post = ({ data, options }) => {\n  const {\n    category,\n    tags,\n    description,\n    title,\n    path,\n    date,\n    image,\n  } = data.frontmatter;\n  const { isIndex, adsense } = options;\n  const html = get(data, \"html\");\n  const isMore = isIndex && !!html.match(\"<!--more-->\");\n  const fixed = get(image, \"childImageSharp.fixed\");\n\n  return (\n    <div className=\"article\" key={path}>\n      <div className=\"container\">\n        <div className=\"info\">\n          <Link style={{ boxShadow: \"none\" }} to={path}>\n            <h1>{title}</h1>\n            <time dateTime={date}>{date}</time>\n          </Link>\n          {Badges({ items: [category], primary: true })}\n          {Badges({ items: tags })}\n        </div>\n        <div className=\"content\">\n          <p>{description}</p>\n          {fixed ? (\n            <Img fixed={fixed} style={{ display: \"block\", margin: \"0 auto\" }} />\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div\n          className=\"content\"\n          dangerouslySetInnerHTML={{\n            __html: isMore ? getDescription(html) : html,\n          }}\n        />\n        {isMore ? Button({ path, label: \"MORE\", primary: true }) : \"\"}\n        {getAd(isIndex, adsense)}\n      </div>\n    </div>\n  );\n};\n\nPost.propTypes = {\n  data: PropTypes.shape({\n    frontmatter: {\n      categoly: PropTypes.string.isRequired,\n      tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n      description: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      path: PropTypes.string.isRequired,\n      image: {\n        childImageSharp: {\n          fixed: PropTypes.any.isRequired,\n        },\n      },\n    },\n    html: PropTypes.string.isRequired,\n  }).isRequired,\n  options: PropTypes.shape({\n    isIndex: PropTypes.bool.isRequired,\n    adsense: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Post;\n"],"sourceRoot":""}