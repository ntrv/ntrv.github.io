{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./src/components/Adsense/index.jsx","webpack:///./src/templates/Post/index.jsx"],"names":["BlogIndex","_ref","data","location","posts","get","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","components_Layout__WEBPACK_IMPORTED_MODULE_5__","components_Meta__WEBPACK_IMPORTED_MODULE_4__","site","map","_ref2","i","post","templates_Post__WEBPACK_IMPORTED_MODULE_6__","options","isIndex","key","propTypes","PropTypes","shape","remark","string","isRequired","meta","pathname","pageQuery","Adsense","componentDidMount","this","props","clientId","window","adsbygoogle","push","render","_this$props","slotId","format","react_default","className","style","display","data-ad-client","data-ad-slot","data-ad-format","React","Component","defaultProps","Button","path","label","primary","gatsby_browser_entry","to","bool","Badges","items","item","Post","_ref3","_data$frontmatter","frontmatter","category","tags","description","title","date","image","adsense","html","isMore","match","fixed","boxShadow","dateTime","gatsby_image_default","margin","dangerouslySetInnerHTML","__html","body","replace","split","getDescription","components_Adsense","getAd","categoly","arrayOf","childImageSharp","any"],"mappings":"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","file":"component---src-pages-index-jsx-0b3c4d9b53d5299c8416.js","sourcesContent":["/* eslint react/no-array-index-key: 0 */\n\nimport { graphql } from 'gatsby'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport get from 'lodash/get'\n\nimport Meta from 'components/Meta'\nimport Layout from 'components/Layout'\n\nimport Post from 'templates/Post'\n\nconst BlogIndex = ({ data, location }) => {\n  const posts = get(data, 'remark.posts')\n  return (\n    <Layout location={location}>\n      <Meta site={get(data, 'site.meta')} />\n      {posts.map(({ post }, i) => (\n        <Post\n          data={post}\n          options={{\n            isIndex: true,\n          }}\n          key={i}\n        />\n      ))}\n    </Layout>\n  )\n}\n\nBlogIndex.propTypes = {\n  data: PropTypes.shape({\n    remark: {\n      posts: PropTypes.string.isRequired,\n    },\n    site: {\n      meta: PropTypes.string.isRequired,\n    },\n  }).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      meta: siteMetadata {\n        title\n        description\n        url: siteUrl\n        author\n        twitter\n        adsense\n      }\n    }\n    remark: allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      posts: edges {\n        post: node {\n          html\n          frontmatter {\n            layout\n            title\n            path\n            category\n            tags\n            description\n            date(formatString: \"YYYY/MM/DD\")\n            image {\n              childImageSharp {\n                fixed(width: 500) {\n                  ...GatsbyImageSharpFixed_withWebp\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nclass Adsense extends React.Component {\n  componentDidMount() {\n    const { clientId } = this.props\n    if (clientId) {\n      ;(window.adsbygoogle = window.adsbygoogle || []).push({})\n    }\n  }\n\n  render() {\n    const { clientId, slotId, format } = this.props\n\n    return clientId ? (\n      <div className=\"ad\">\n        <ins\n          className=\"adsbygoogle\"\n          style={{ display: 'block' }}\n          data-ad-client={clientId}\n          data-ad-slot={slotId}\n          data-ad-format={format}\n        />\n      </div>\n    ) : (\n      ''\n    )\n  }\n}\n\nAdsense.defaultProps = {\n  clientId: '',\n  slotId: '',\n}\n\nAdsense.propTypes = {\n  clientId: PropTypes.string,\n  slotId: PropTypes.string,\n  format: PropTypes.string.isRequired,\n}\n\nexport default Adsense\n","import { Link } from 'gatsby'\nimport get from 'lodash/get'\nimport React from 'react'\nimport map from 'lodash/map'\nimport Img from 'gatsby-image'\nimport PropTypes from 'prop-types'\n\nimport Adsense from 'components/Adsense'\n// import Footer from 'components/Footer'\n\nimport './style.scss'\n\nconst getAd = (isIndex, adsense) =>\n  !isIndex ? <Adsense clientId={adsense} slotId=\"\" format=\"auto\" /> : ''\n\nconst getDescription = html => {\n  let body = html.replace(/<blockquote>/g, '<blockquote class=\"blockquote\">')\n  if (body.match('<!--more-->')) {\n    body = body.split('<!--more-->')\n    if (typeof body[0] !== 'undefined') {\n      return body[0]\n    }\n  }\n  return body\n}\n\nconst Button = ({ path, label, primary }) => (\n  <Link className=\"readmore\" to={path}>\n    <span\n      className={`btn btn-outline-primary btn-block ${\n        primary ? 'btn-outline-primary' : 'btn-outline-secondary'\n      }`}\n    >\n      {label}\n    </span>\n  </Link>\n)\n\nButton.propTypes = {\n  path: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  primary: PropTypes.bool.isRequired,\n}\n\nconst Badges = ({ items, primary }) =>\n  map(items, (item, i) => (\n    <span\n      className={`badge ${primary ? 'badge-primary' : 'badge-secondary'}`}\n      key={i}\n    >\n      {item}\n    </span>\n  ))\n\nconst Post = ({ data, options }) => {\n  const {\n    category,\n    tags,\n    description,\n    title,\n    path,\n    date,\n    image,\n  } = data.frontmatter\n  const { isIndex, adsense } = options\n  const html = get(data, 'html')\n  const isMore = isIndex && !!html.match('<!--more-->')\n  const fixed = get(image, 'childImageSharp.fixed')\n\n  return (\n    <div className=\"article\" key={path}>\n      <div className=\"container\">\n        <div className=\"info\">\n          <Link style={{ boxShadow: 'none' }} to={path}>\n            <h1>{title}</h1>\n            <time dateTime={date}>{date}</time>\n          </Link>\n          {Badges({ items: [category], primary: true })}\n          {Badges({ items: tags })}\n        </div>\n        <div className=\"content\">\n          <p>{description}</p>\n          {fixed ? (\n            <Img fixed={fixed} style={{ display: 'block', margin: '0 auto' }} />\n          ) : (\n            ''\n          )}\n        </div>\n        <div\n          className=\"content\"\n          dangerouslySetInnerHTML={{\n            __html: isMore ? getDescription(html) : html,\n          }}\n        />\n        {isMore ? Button({ path, label: 'MORE', primary: true }) : ''}\n        {getAd(isIndex, adsense)}\n      </div>\n    </div>\n  )\n}\n\nPost.propTypes = {\n  data: PropTypes.shape({\n    frontmatter: {\n      categoly: PropTypes.string.isRequired,\n      tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n      description: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      path: PropTypes.string.isRequired,\n      image: {\n        childImageSharp: {\n          fixed: PropTypes.any.isRequired,\n        },\n      },\n    },\n    html: PropTypes.string.isRequired,\n  }).isRequired,\n  options: PropTypes.shape({\n    isIndex: PropTypes.bool.isRequired,\n    adsense: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default Post\n"],"sourceRoot":""}